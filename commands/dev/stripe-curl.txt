const { SlashCommandBuilder, PermissionFlagsBits, AttachmentBuilder } = require('discord.js');
const stripe_1 = require("../../integrations/stripe");

module.exports = {
    data: new SlashCommandBuilder()
        .setName('subscriptions')
        .setDMPermission(false)
        .setDescription('Returns a list of subscriptions for a given email.')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
        .addStringOption(option =>
            option.setName('email')
                .setDescription('Email for which to fetch subscriptions')
                .setRequired(true)
        ),

    async execute(client, interaction) {
        const email = interaction.options.getString('email');

        try {
            const subscriptions = await stripe_1.getSubscriptionsForEmail(email);
            const subscriptionsData = JSON.stringify(subscriptions, null, 2);
            
            const buffer = Buffer.from(subscriptionsData, 'utf-8');
            const attachment = new AttachmentBuilder(buffer, { name: `subscriptions_${email}.txt` });
            
            await interaction.reply({
                content: `Subscriptions of \`${email}\`:`,
                files: [attachment],
                embeds: [],
                flags: "Ephemeral"
            });
            
        } catch (error) {
            console.error('Error fetching subscriptions:', error);            
            await interaction.reply({ content: `An error occurred while fetching subscriptions for ${email}.`, flags: "Ephemeral" });
        }
    }
};